{
	"name": "df_blob_DepartmentWiseEmployees",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blob_employee",
						"type": "DatasetReference"
					},
					"name": "sourceEmployees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputDataset",
						"type": "DatasetReference"
					},
					"name": "sinkIT"
				},
				{
					"dataset": {
						"referenceName": "OutputDataset",
						"type": "DatasetReference"
					},
					"name": "sinkManagement"
				},
				{
					"dataset": {
						"referenceName": "OutputDataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "OutputDataset",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tempid as string,\n\t\tname as string,\n\t\tcountry as string,\n\t\tdepartment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceEmployees\nsourceEmployees split(equals(department,'1'),\n\tequals(department,'2'),\n\tequals(department,'3'),\n\tdisjoint: false) ~> ConditionalSplit1@(ITEmployees, HREmployees, ManagementEmployees, OtherEmployees)\nConditionalSplit1@ITEmployees sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Employee ID} as string,\n\t\t{Employee Name} as string,\n\t\tCountry as string,\n\t\t{Department ID} as string,\n\t\t{Department Name} as string\n\t),\n\tpartitionFileNames:['ITEmployees.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sinkIT\nConditionalSplit1@ManagementEmployees sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Employee ID} as string,\n\t\t{Employee Name} as string,\n\t\tCountry as string,\n\t\t{Department ID} as string,\n\t\t{Department Name} as string\n\t),\n\tpartitionFileNames:['ManagementEmplyees.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sinkManagement\nConditionalSplit1@HREmployees sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Employee ID} as string,\n\t\t{Employee Name} as string,\n\t\tCountry as string,\n\t\t{Department ID} as string,\n\t\t{Department Name} as string\n\t),\n\tpartitionFileNames:['HREmployees.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nConditionalSplit1@OtherEmployees sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Employee ID} as string,\n\t\t{Employee Name} as string,\n\t\tCountry as string,\n\t\t{Department ID} as string,\n\t\t{Department Name} as string\n\t),\n\tpartitionFileNames:['OtherDepartmentEmployees.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
		}
	}
}